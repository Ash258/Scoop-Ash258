version: 9.1.0.0p1-Beta
description: A suite of secure networking utilities based on the Secure Shell protocol. (Microsoft port)
homepage: https://github.com/PowerShell/Win32-OpenSSH
license:
  identifier: BSD-3-Clause
  url: https://github.com/PowerShell/openssh-portable/blob/latestw_all/LICENCE
changelog: https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v9.1.0.0p1-Beta
pre_download: Assert-Administrator
architecture:
  64bit:
    url: https://github.com/PowerShell/Win32-OpenSSH/releases/download/v9.1.0.0p1-Beta/OpenSSH-Win64.zip
    hash: a17c2ba5dacb21936e2f927faad4e849f798f44ed1f656fc1e00bbd8e0966140
    extract_dir: OpenSSH-Win64
  32bit:
    url: https://github.com/PowerShell/Win32-OpenSSH/releases/download/v9.1.0.0p1-Beta/OpenSSH-Win32.zip
    hash: 543f1ce0d97a762bd52c85b3397cf07ff411f4ae58113b11d1e56a60629c6a09
    extract_dir: OpenSSH-Win32
pre_install: |
  ##### TODO: How to handle updates?
  Write-UserMessage -Message 'Installing SSHD service' -Warning
  & "$dir\install-sshd.ps1"

      # Key-based authentication with administrator support
  $admins = "$env:ProgramData\ssh\administrators_authorized_keys"
  $key = if (Test-Path "$env:USERPROFILE\.ssh\authorized_keys" -PathType 'Leaf') { "$env:USERPROFILE\.ssh\authorized_keys" } else { "$env:USERPROFILE\.ssh\id_rsa.pub" }

  if (Test-Path -LiteralPath $key -PathType 'Leaf') {
      Copy-Item $key $admins -ErrorAction 'SilentlyContinue' -Force
      icacls.exe $admins /inheritance:r
      icacls.exe $admins /grant 'BUILTIN\Administrators:F'
      icacls.exe $admins /remove 'NT AUTHORITY\Authenticated Users'
      icacls.exe $admins /setowner 'NT AUTHORITY\System'
  }

  if (!(Test-Path "$env:ProgramData\ssh\sshd_config" -PathType 'Leaf')) {
      Copy-Item "$dir\sshd_config_default" "$env:ProgramData\ssh\sshd_config"
  } else {
      Add-Content "$env:ProgramData\ssh\sshd_config" @'
  Match Group administrators
         AuthorizedKeysFile __PROGRAMDATA__/ssh/administrators_authorized_keys
  '@
  }

      # Default shell to pwsh
  $pwshPath = Invoke-ScoopCommand 'which' @('pwsh')
  New-ItemProperty -Path 'HKLM:\SOFTWARE\OpenSSH' -Name 'DefaultShell' -Value "$pwshPath" -PropertyType 'String' -Force | Out-Null
  & "$dir\FixUserFilePermissions.ps1" -Confirm:$false
  & "$dir\FixHostFilePermissions.ps1" -Confirm:$false
  New-NetFirewallRule -Name 'sshd' -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction 'Inbound' -Protocol 'TCP' -Action 'Allow' -LocalPort 22 -ErrorAction 'SilentlyContinue' | Out-Null
  $serv = Get-Service 'sshd', 'ssh-agent'
  $serv | Set-Service -StartupType Automatic
  $serv | Start-Service
  #TODO: Autohold
bin:
- scp.exe
- sftp.exe
- sftp-server.exe
- ssh-add.exe
- ssh-agent.exe
- ssh-keygen.exe
- ssh-keyscan.exe
- ssh-shellhost.exe
- ssh.exe
- sshd.exe
checkver:
  github: https://github.com/PowerShell/Win32-OpenSSH
  regex: download/v([\w.-]+)/
autoupdate:
  archive: true
  changelog: https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v$version
  architecture:
    64bit:
      url: https://github.com/PowerShell/Win32-OpenSSH/releases/download/v$version/OpenSSH-Win64.zip
    32bit:
      url: https://github.com/PowerShell/Win32-OpenSSH/releases/download/v$version/OpenSSH-Win32.zip
